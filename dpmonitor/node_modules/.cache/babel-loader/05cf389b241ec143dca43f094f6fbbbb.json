{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Project/2021SpringTeam04-LAS1/dpmonitor/src/components/Data.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Grid from './Grid';\nimport './Data.css';\nimport Button from 'react-bootstrap/Button';\nimport ScriptList from './ScriptList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Data() {\n  _s();\n\n  // GET request to fetch script list\n  // temporary scripts array until api is ready\n  let scripts = [{\n    id: 'users',\n    name: 'Sponsor Script',\n    value: 'example value 1'\n  }, {\n    id: 'posts',\n    name: 'Hello World',\n    value: 'example value 2'\n  }, {\n    id: 'comments',\n    name: 'My Team Is',\n    value: 'example value 3'\n  }, {\n    id: 'todos',\n    name: 'Empty Script',\n    value: 'example value 4'\n  }]; // Default selected script is index 0 in array\n\n  const [selectedScript, setSelectedScript] = useState(scripts[1]);\n  const [activeIndex, setActiveIndex] = useState(1); // On click of script list, set state to currently selected script\n\n  function handleClick(e) {\n    let nodes = Array.prototype.slice.call(e.currentTarget.children);\n    let index = nodes.indexOf(e.target);\n    let currentScript = scripts[index];\n    setSelectedScript(currentScript);\n    setActiveIndex(index);\n  }\n\n  function renderGrid(selectedScript) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"grid\",\n      script: selectedScript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-and-button-container\",\n      children: [renderGrid(selectedScript), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"export-button\",\n        variant: \"outline-primary\",\n        children: \"Export Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"script-list\",\n      children: /*#__PURE__*/_jsxDEV(ScriptList, {\n        onScriptSelect: handleClick,\n        scriptList: scripts,\n        activeIndex: activeIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Data, \"5Cx1lnM7ZWPXL9RUCnuGhQAUnA0=\");\n\n_c = Data;\nexport default Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"sources":["/Users/mac/Project/2021SpringTeam04-LAS1/dpmonitor/src/components/Data.js"],"names":["React","useState","Grid","Button","ScriptList","Data","scripts","id","name","value","selectedScript","setSelectedScript","activeIndex","setActiveIndex","handleClick","e","nodes","Array","prototype","slice","call","currentTarget","children","index","indexOf","target","currentScript","renderGrid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ;AACA;AACA,MAAIC,OAAO,GAAG,CACV;AACIC,IAAAA,EAAE,EAAE,OADR;AAEIC,IAAAA,IAAI,EAAE,gBAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GADU,EAMV;AACIF,IAAAA,EAAE,EAAE,OADR;AAEIC,IAAAA,IAAI,EAAE,aAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GANU,EAWV;AACIF,IAAAA,EAAE,EAAE,UADR;AAEIC,IAAAA,IAAI,EAAE,YAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAXU,EAgBV;AACIF,IAAAA,EAAE,EAAE,OADR;AAEIC,IAAAA,IAAI,EAAE,cAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAhBU,CAAd,CAHY,CA0BZ;;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAACK,OAAO,CAAC,CAAD,CAAR,CAApD;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C,CA5BY,CA8BZ;;AACA,WAASa,WAAT,CAAqBC,CAArB,EAAwB;AACpB,QAAIC,KAAK,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BL,CAAC,CAACM,aAAF,CAAgBC,QAA3C,CAAZ;AACA,QAAIC,KAAK,GAAGP,KAAK,CAACQ,OAAN,CAAcT,CAAC,CAACU,MAAhB,CAAZ;AACA,QAAIC,aAAa,GAAGpB,OAAO,CAACiB,KAAD,CAA3B;AACAZ,IAAAA,iBAAiB,CAACe,aAAD,CAAjB;AACAb,IAAAA,cAAc,CAACU,KAAD,CAAd;AACH;;AAED,WAASI,UAAT,CAAoBjB,cAApB,EAAoC;AAChC,wBAAO,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,MAAM,EAAEA;AAA/B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,iBACKiB,UAAU,CAACjB,cAAD,CADf,eAEI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,OAAO,EAAC,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI,QAAC,UAAD;AACI,QAAA,cAAc,EAAEI,WADpB;AAEI,QAAA,UAAU,EAAER,OAFhB;AAGI,QAAA,WAAW,EAAEM;AAHjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA5DQP,I;;KAAAA,I;AA8DT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport Grid from './Grid';\nimport './Data.css';\nimport Button from 'react-bootstrap/Button';\nimport ScriptList from './ScriptList';\n\nfunction Data() {\n    // GET request to fetch script list\n    // temporary scripts array until api is ready\n    let scripts = [\n        {\n            id: 'users',\n            name: 'Sponsor Script',\n            value: 'example value 1',\n        },\n        {\n            id: 'posts',\n            name: 'Hello World',\n            value: 'example value 2',\n        },\n        {\n            id: 'comments',\n            name: 'My Team Is',\n            value: 'example value 3',\n        },\n        {\n            id: 'todos',\n            name: 'Empty Script',\n            value: 'example value 4',\n        },\n    ];\n\n    // Default selected script is index 0 in array\n    const [selectedScript, setSelectedScript] = useState(scripts[1]);\n    const [activeIndex, setActiveIndex] = useState(1);\n\n    // On click of script list, set state to currently selected script\n    function handleClick(e) {\n        let nodes = Array.prototype.slice.call(e.currentTarget.children);\n        let index = nodes.indexOf(e.target);\n        let currentScript = scripts[index];\n        setSelectedScript(currentScript);\n        setActiveIndex(index);\n    }\n\n    function renderGrid(selectedScript) {\n        return <Grid className='grid' script={selectedScript} />;\n    }\n\n    return (\n        <div className='data-view-container'>\n            <div className='grid-and-button-container'>\n                {renderGrid(selectedScript)}\n                <Button className='export-button' variant='outline-primary'>\n                    Export Data\n                </Button>\n            </div>\n            <div className='script-list'>\n                <ScriptList\n                    onScriptSelect={handleClick}\n                    scriptList={scripts}\n                    activeIndex={activeIndex}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Data;\n"]},"metadata":{},"sourceType":"module"}