{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Project/2021SpringTeam04-LAS1/dpmonitor/src/components/Scripts.js\";\nimport React, { Component } from 'react';\nimport Editor from './Editor';\nimport ScriptList from './ScriptList';\nimport './Scripts.css';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Scripts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => this.setState({\n      showModal: false\n    });\n\n    this.handleShow = () => this.setState({\n      showModal: true\n    });\n\n    this.state = {\n      // Will need a GET request here to fetch script list\n      // Temporarily using scripts array\n      scripts: [{\n        id: 1,\n        name: 'Sponsor Script',\n        value: `import sys\nimport pandas as pd\n\ndef ctry_any_actor(ctry:str)->int: \n    return df[(df['Actor1Geo'] == ctry) | \n    (df['Actor2Geo'] == ctry)]['Frequency'].sum()\n\ndf = pd.read_csv(sys.argv[1])\n\ntotal_articles = df['Frequency'].sum()\nabout_usa = ctry_any_actor('US')\n\ncountry_set = sorted(set(df['Actor1Geo']) | \nset(df['Actor2Geo']))\nfor ctry in country_set: \n    cnt = ctry_any_actor(ctry)\n    print('%2s: %5.2f' % (ctry, cnt * 100.0 / \n        total_articles))`\n      }, {\n        id: 2,\n        name: 'Hello World',\n        value: `def hello():\n    print('Hello World!')\n    \nhello()`\n      }, {\n        id: 3,\n        name: 'My Team Is',\n        value: `team = \"Team 4 - LAS 1\"\nprint(\"My team is \" + name)`\n      }, {\n        id: 4,\n        name: 'Empty Script',\n        value: ''\n      }],\n      selectedScriptIndex: 0,\n      showModal: false,\n      formValue: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.renderEditor = this.renderEditor.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.generateURL = this.generateURL.bind(this);\n  }\n\n  handleClick(e) {\n    let nodes = Array.prototype.slice.call(e.currentTarget.children);\n    let index = nodes.indexOf(e.target);\n    this.setState({\n      selectedScriptIndex: index\n    });\n  }\n\n  renderEditor(selectedScript) {\n    return /*#__PURE__*/_jsxDEV(Editor, {\n      className: \"editor\",\n      editorValue: selectedScript.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  } // Runs after user submits form for creating new script and entering\n  // script name.\n  // Here we should call the create script api endpoint to send\n  // script name and get the new script id as well as the post url\n\n\n  generateURL(e) {\n    let newScript = {\n      id: Math.floor(Math.random() * Math.floor(50)),\n      name: this.state.formValue,\n      value: ''\n    };\n    const newScriptList = this.state.scripts.concat(newScript);\n    this.setState({\n      selectedScriptIndex: this.state.scripts.length\n    });\n    this.setState({\n      scripts: newScriptList\n    });\n    this.setState({\n      formValue: ''\n    });\n    this.handleClose();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scripts-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"headings\",\n          children: [\"POST data to:\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"https://API/receive_data/\", this.state.scripts[this.state.selectedScriptIndex].id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), this.renderEditor(this.state.scripts[this.state.selectedScriptIndex])]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"script-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"headings\",\n          children: \"Scripts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-and-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(ScriptList, {\n            className: \"script-list\",\n            onScriptSelect: this.handleClick,\n            scriptList: this.state.scripts,\n            activeIndex: this.state.selectedScriptIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"script-list-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"create-button\",\n              variant: \"outline-primary\",\n              onClick: this.handleShow,\n              children: \"Create New Script\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"rename-button\",\n              variant: \"outline-primary\",\n              children: \"Rename\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.showModal,\n        onHide: this.handleClose,\n        animation: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Create New Script\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"newScriptName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Script Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter new script name\",\n                onChange: e => this.setState({\n                  formValue: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: this.handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            onClick: this.generateURL,\n            children: \"Generate Custom POST URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Scripts;","map":{"version":3,"sources":["/Users/mac/Project/2021SpringTeam04-LAS1/dpmonitor/src/components/Scripts.js"],"names":["React","Component","Editor","ScriptList","Button","Modal","Form","Scripts","constructor","props","handleClose","setState","showModal","handleShow","state","scripts","id","name","value","selectedScriptIndex","formValue","handleClick","bind","renderEditor","generateURL","e","nodes","Array","prototype","slice","call","currentTarget","children","index","indexOf","target","selectedScript","newScript","Math","floor","random","newScriptList","concat","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Editor from './Editor';\nimport ScriptList from './ScriptList';\nimport './Scripts.css';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nclass Scripts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Will need a GET request here to fetch script list\n            // Temporarily using scripts array\n            scripts: [\n                {\n                    id: 1,\n                    name: 'Sponsor Script',\n                    value: `import sys\nimport pandas as pd\n\ndef ctry_any_actor(ctry:str)->int: \n    return df[(df['Actor1Geo'] == ctry) | \n    (df['Actor2Geo'] == ctry)]['Frequency'].sum()\n\ndf = pd.read_csv(sys.argv[1])\n\ntotal_articles = df['Frequency'].sum()\nabout_usa = ctry_any_actor('US')\n\ncountry_set = sorted(set(df['Actor1Geo']) | \nset(df['Actor2Geo']))\nfor ctry in country_set: \n    cnt = ctry_any_actor(ctry)\n    print('%2s: %5.2f' % (ctry, cnt * 100.0 / \n        total_articles))`,\n                },\n                {\n                    id: 2,\n                    name: 'Hello World',\n                    value: `def hello():\n    print('Hello World!')\n    \nhello()`,\n                },\n                {\n                    id: 3,\n                    name: 'My Team Is',\n                    value: `team = \"Team 4 - LAS 1\"\nprint(\"My team is \" + name)`,\n                },\n                {\n                    id: 4,\n                    name: 'Empty Script',\n                    value: '',\n                },\n            ],\n            selectedScriptIndex: 0,\n            showModal: false,\n            formValue: '',\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.renderEditor = this.renderEditor.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleShow = this.handleShow.bind(this);\n        this.generateURL = this.generateURL.bind(this);\n    }\n\n    handleClose = () => this.setState({ showModal: false });\n    handleShow = () => this.setState({ showModal: true });\n\n    handleClick(e) {\n        let nodes = Array.prototype.slice.call(e.currentTarget.children);\n        let index = nodes.indexOf(e.target);\n        this.setState({ selectedScriptIndex: index });\n    }\n\n    renderEditor(selectedScript) {\n        return <Editor className='editor' editorValue={selectedScript.value} />;\n    }\n\n    // Runs after user submits form for creating new script and entering\n    // script name.\n    // Here we should call the create script api endpoint to send\n    // script name and get the new script id as well as the post url\n    generateURL(e) {\n        let newScript = {\n            id: Math.floor(Math.random() * Math.floor(50)),\n            name: this.state.formValue,\n            value: '',\n        };\n        const newScriptList = this.state.scripts.concat(newScript);\n        this.setState({ selectedScriptIndex: this.state.scripts.length });\n        this.setState({ scripts: newScriptList });\n        this.setState({ formValue: '' });\n        this.handleClose();\n    }\n\n    render() {\n        return (\n            <div className='scripts-page-container'>\n                <div className='editor-section'>\n                    <h4 className='headings'>\n                        POST data to:{' '}\n                        <strong>\n                            https://API/receive_data/\n                            {\n                                this.state.scripts[\n                                    this.state.selectedScriptIndex\n                                ].id\n                            }\n                        </strong>\n                    </h4>\n                    {this.renderEditor(\n                        this.state.scripts[this.state.selectedScriptIndex]\n                    )}\n                </div>\n\n                <div className='script-section'>\n                    <h4 className='headings'>Scripts</h4>\n                    <div className='list-and-buttons'>\n                        <ScriptList\n                            className='script-list'\n                            onScriptSelect={this.handleClick}\n                            scriptList={this.state.scripts}\n                            activeIndex={this.state.selectedScriptIndex}\n                        />\n                        <div className='script-list-buttons'>\n                            <Button\n                                className='create-button'\n                                variant='outline-primary'\n                                onClick={this.handleShow}\n                            >\n                                Create New Script\n                            </Button>\n                            <Button\n                                className='rename-button'\n                                variant='outline-primary'\n                            >\n                                Rename\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n\n                <Modal\n                    show={this.state.showModal}\n                    onHide={this.handleClose}\n                    animation={true}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Create New Script</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <Form.Group controlId='newScriptName'>\n                                <Form.Label>Script Name</Form.Label>\n                                <Form.Control\n                                    type='text'\n                                    placeholder='Enter new script name'\n                                    onChange={(e) =>\n                                        this.setState({\n                                            formValue: e.target.value,\n                                        })\n                                    }\n                                />\n                            </Form.Group>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant='secondary' onClick={this.handleClose}>\n                            Close\n                        </Button>\n                        <Button\n                            type='submit'\n                            variant='primary'\n                            onClick={this.generateURL}\n                        >\n                            Generate Custom POST URL\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Scripts;\n"]},"metadata":{},"sourceType":"module"}